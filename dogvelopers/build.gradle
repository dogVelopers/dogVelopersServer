plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.dogvelopers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.7.0")
    testImplementation ('org.junit.jupiter:junit-jupiter:5.7.0')
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure:2.2.1.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-aws-context:2.2.1.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.1.RELEASE'
}

springBoot {
    mainClass = 'com.dogvelopers.dogvelopers.DogvelopersApplication' // build 시 main class 를 찾아주기 위함
}

bootJar{
    archivesBaseName = 'dogvelopers'
    archiveFileName = 'dogvelopers.jar'
    archiveVersion = "0.0.1"
}

test {
    useJUnitPlatform() // 이 의존성이 있어야지 , github action 시에 test 돌릴 수 있음
}